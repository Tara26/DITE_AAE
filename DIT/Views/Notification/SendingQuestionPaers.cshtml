
@model Models.ExamNotification.QuestionPaperSets
@{
    ViewBag.Title = "SendingQuestionPaers";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="~/Content/frontend/js/bootstrap.js"></script>
    <script src="~/Scripts/bootbox.js"></script>
    <script src="~/Scripts/bootbox.min.js"></script>
    <script src="~/Scripts/bootbox.locales.min.js"></script>
    <script src="~/Content/frontend/js/jquery-ui.min.js"></script>
    <script src="~/Scripts/jquery-3.3.1.js"></script>
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.18.1/moment.min.js"></script>
    <script src="~/Content/js/jquery-ui.min.js"></script>
    <link href="~/Content/jquery.dataTables.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/Content/css/jquery-ui.min.css" type="text/css">




<script type="text/javascript">
    //var ViewSubjectToNotificationGridtable = $("#QuestionpapersetGrid").DataTable();

    function ViewPdf() {
        debugger;
        //var urlPath = "../../Content//Template//Notification_" + Filename + ".pdf";
        var urlPath = "../../Content//Template//Notification_120120" + ".pdf";
        window.open(urlPath, '_blank');

    };



    function GetExamDate() {
        debugger;
        var SubjectId = $('#mySkills :selected').val();
        var subject_type_id = $('#subject_type_id :selected').val();
        $.ajax({
            type: 'POST',
            url: '/Notification/GetExamDate',
            data: { SubjectId: SubjectId },
            success: function (data) {
                if (data.length > 0) {
                    $("#ExamDate").empty();

                    $('#ExamDate').val(data);


                    $("#ExamDate").trigger('change');
                }
            }
        });
    }

    $(document).ready(function () {
        $('#btnAddquestion').click(function (e) {

            debugger;
            if ($('#course_id').val() == "") {
                bootbox.alert("Please Enter the CourseType");
                e.preventDefault();
            } else if ($('#trade_type_id').val() == "") {
                bootbox.alert("Please Enter the TradeType");
                e.preventDefault();
            } else if ($('#trade_id').val() == "") {
                bootbox.alert("Please Enter the Trade");
                e.preventDefault();
            } else if ($('#trade_year_id').val() == "") {
                bootbox.alert("Please Enter the TradeYear");
                e.preventDefault();
            } else if ($('#exam_type_id').val() == "") {
                bootbox.alert("Please Enter the ExamType");
                e.preventDefault();
            } else if ($('#subject_type_id').val() == "") {
                bootbox.alert("Please Enter the SubjectType");
                e.preventDefault();
            } else if ($('#SubjectId').val() == "") {
                bootbox.alert("Please Enter the Subject");
                e.preventDefault();
            } else if ($('#Exam_Date').val() == "") {
                bootbox.alert("Please Enter the Exam_Date");
                e.preventDefault();
            } else if ($("#qp  option:selected").text() == "") {
                bootbox.alert("Please select the question paper set");
                e.preventDefault();
            } else if ($('#file').val() == "") {
                bootbox.alert("Please select the file");
                e.preventDefault();
            }
            else {
                debugger;
                var Course_Type = $('#course_id :selected').text();
                var Trade_Type = $('#trade_type_id :selected').text();
                var Trade = $('#trade_id :selected').text();
                var Trade_Year = $('#trade_year_id :selected').text();
                var Exam_Type = $('#exam_type_id :selected').text();
                var Subject_Type = $('#subject_type_id :selected').text();

                var Subject = $('#mySkills option:selected')
                    .toArray().map(item => item.text).join(); //$('#SubjectId :selected').text();
                var Exam_date = $('#ExamDate').val();

                var CourseTypeId = $('#course_id :selected').val();
                var TradeTypeId = $('#trade_type_id :selected').val();
                var TradeId = $('#trade_id :selected').val();
                var TradeYearId = $('#trade_year_id :selected').val();
                var ExamTypeId = $('#exam_type_id :selected').val();
                var SubjectTypeId = $('#subject_type_id :selected').val();
                var SubjectID = $('#mySkills option:selected')
                    .toArray().map(item => item.value).join();


                var Question_paper = $("#qp  option:selected").text();
                var pdf_file = $('input[type=file]').val().split('\\').pop();
                var filename = $('input[type=file]').val().replace(/C:\\fakepath\\/i, '')
               // var pdf_file = $('#file').val();
                //var documentt = $("#file").val();
                //  var document = documentt.split(/[\/\\]/).slice(-1);

                // var urlPath = "../../Content/Uploads/QuestionPaper/" + Desc + "/" + encodeURIComponent(document);
                 $("#QuestionpapersetGrid").append("<tr><td align='center'>" + Course_Type + "</td><td>" +
                    Trade_Type + "</td><td align='center'>" + Trade + "</td><td>" + Trade_Year + "</td><td>" +
                    Exam_Type + "</td><td align='center'>" + Subject_Type + "</td><td align='center'>" + Subject +
                    "</td><td align='center'>" + Exam_date + "</td><td align='center'>" + Question_paper +
                    "</td><td align='center'><a style='text - align: center; float: initial' class='btn btn - primary' onclick='ViewPdf()' >View QuestionPaper</a></td><td style='display: none'>" +
                    //"</td><td><a class='text_custom_green noExport btn btn-primary Delete' href='javascript:;'>Delete</a><a class='text_custom_green noExport btn btn-primary Edit' href='javascript:;'>Edit</a></td><td style='display: none'>" +
                    "</td><td><a class='text_custom_green noExport btn btn-primary Delete' href='javascript:;'>Delete</a> <a class='btn btn-primary' href='@Url.Action("SendingQuestionPaers", "Notification")'>Edit</a></td><td style='display: none'>" +

                    Course_Type + "</td><td style='display: none'>" + Trade_Type + "</td><td style='display: none'>" + Trade +
                    "</td><td style='display: none'>" + Trade_Year + "</td><td style='display: none'>" + Exam_Type +
                    "</td><td style='display: none'>" + Subject_Type + "</td><td style='display: none'>" + Subject +
                    "</td><td style='display: none'>" + pdf_file + "</td></tr>");
              //  $("#QuestionpapersetGrid").append("<tr><td align='center'>" + Course_Type + "</td><td>" + Trade_Type + "</td><td align='center'>" + Trade + "</td><td>" + Trade_Year + "</td><td>" + Exam_Type + "</td><td align='center'>" + Subject_Type + "</td><td align='center'>" + Subject + "</td><td align='center'>" + Exam_date + "</td><td align='center'>" + Question_paper + "</td><td align='center'>" + pdf_file + "</td><td><a class='text_custom_green noExport btn btn-primary Delete' href='javascript:;'>Delete</a></td><td style='display: none'>" + CourseTypeId + "</td><td style='display: none'>" + TradeTypeId + "</td><td style='display: none'>" + TradeId + "</td><td style='display: none'>" + TradeYearId + "</td><td style='display: none'>" + ExamTypeId + "</td><td style='display: none'>" + SubjectTypeId + "</td><td style='display: none'>" + SubjectID + "</td><td style='display: none'>" + pdf_file + "</td></tr>");
                //$("#QuestionpapersetGrid").append("<tr><td align='center'>" + Course_Type + "</td><td>" + Trade_Type + "</td><td align='center'>" + Trade + "</td><td>" + Trade_Year + "</td><td>" + Exam_Type + "</td><td align='center'>" + Subject_Type + "</td><td align='center'>" + Subject + "</td><td align='center'>" + Exam_date + "</td><td align='center'>" + Question_paper + "</td><td align='center'>" + pdf_file + "</td><td><a class='text_custom_green noExport btn btn-primary Delete' href='javascript:;'>Delete</a></td><td><input type='checkbox' class='text_custom_green noExport btn' id='isInclude'></td><td style='display: none'>" + Subject_Type + "</td><td style='display: none'>" + Subject + "</td></tr>");

                // $("#QuestionpapersetGrid").append("<tr><td align='center'>" + Course_Type + "</td><td>" + Trade_Type + "</td><td align='center'>" + Trade + "</td><td>" + Trade_Year + "</td><td>" + Exam_Type + "</td><td align='center'>" + Subject_Type + "</td><td align='center'>" + Subject + "</td><td align='center'>" + Exam_date + "</td><td align='center'>" + Question_paper + "</td><td align='center'>" + pdf_file + "</td><td><a class='text_custom_green noExport btn btn-primary Delete' href='javascript:;'>Delete</a></td><td style='display: none'>" + Course_Type + "</td><td style='display: none'>" + Trade_Type + "</td><td style='display: none'>" + Trade + "</td><td style='display: none'>" + Trade_Year + "</td><td style='display: none'>" + Exam_Type + "</td><td style='display: none'>" + Subject_Type + "</td><td style='display: none'>" + Subject + "</td><td style='display: none'>" + Exam_date + "</td><td style='display: none'>" + Question_paper + "</td><td style='display: none'>" + pdf_file + "</td></tr>");
                bootbox.alert("Question paper set Added Sucessfully.");


               // MergeCommonRows($("#tbody_Division_Grid"), (divisionwiseCenterNameColumnIndex + 1));
                //MergeCommonRows($("#tbody_Division_Grid"), (divisionwiseDistrictNameColumnIndex + 1));
                //MergeCommonRows($("#tbody_Division_Grid"), (divisionwiseDivisionNameColumnIndex + 1));

            }

            //MergeCommonRows($("#tbody_Division_Grid"), (1));
            //MergeCommonRows($("#tbody_Division_Grid"), (2));
            //MergeCommonRows($("#tbody_Division_Grid"), (3));
        });
    });

    

    $(document).ready(function () {
        $('#btnSaveSendQP').click(function (e) {
            debugger;
            bootbox.confirm({
                title: "Confirm",
                message: "Are you sure you want to Save?",
                buttons: {
                    confirm: {
                        label: 'Yes',
                        className: 'btn-success'
                    },
                    cancel: {
                        label: 'No',
                        className: 'btn-danger'
                    }
                },
                callback: function (result) {
                    if (result == true) {
                        var model = {}; // QuestionPaperSetsList
                        model.QuestionPaperSetsList = new Object();
                        model.QuestionPaperSetsList.objQuestionPaperSetsItem = GetSendQPObject();

                        $.ajax({
                            type: 'POST',
                            url: '/Notification/SaveSendQP',
                            data: { model: model },
                            success: function (result) {
                                if (result == "Success") {
                                    bootbox.alert("Saved Sucessfully.");
                                    clearNotification();
                                    $('#file').val("");
                                    $('#QuestionpapersetGrid tbody').empty();
                                } else if (result == "AlreadyExists") {
                                    bootbox.alert("File Already Exists.");
                                } else {
                                    bootbox.alert("Error while Saving Data");
                                }
                            }
                        });
                    }
                    MergeCommonRows($("#QuestionpapersetGrid"), 6);
                    MergeCommonRows($("#QuestionpapersetGrid"), 5);
                    MergeCommonRows($("#QuestionpapersetGrid"), 4);
                    MergeCommonRows($("#QuestionpapersetGrid"), 3);
                    MergeCommonRows($("#QuestionpapersetGrid"), 2);
                    MergeCommonRows($("#QuestionpapersetGrid"), 1);
                }
            });

        });

        $("body").on("click", "#tbodySendQP .Delete", function () {
            var row = $(this).closest("tr");
            bootbox.confirm({
                message: "Do you want to delete this row?",
                callback: function (result) {
                    // $('.bootbox').modal('hide');
                    if (result == true) {
                        //   var $tdDoctype = row.find("td:nth-child(2)");
                        //   var DocType = $tdDoctype.text().trim();
                        //   var $tdDocName = row.find("td:nth-child(3)");
                        //   var DocName = $tdDocName.text().trim();

                        //   var dig = parseInt(row.find("td:nth-child(1)").text());
                        //   $("#slNumber").val(dig - 1);
                        ////    Iterating across all the rows
                        //   // obtained to change the index
                        //   child.each(function () {
                        //       var dig = parseInt($(this).find("td:nth-child(1)").text());
                        //       $("#slNumber").val(dig - 1);
                        //       // Modifying row index.
                        //       $(this).find("td:nth-child(1)").text(dig - 1);
                        //   });

                        row.remove();

                    }
                }
            });
        });
    });

    //$("body").on("click", "#tbodySendQP .Delete", function () {
    //    debugger;
    //    var row = $(this).closest("tr");
    //    // Getting all the rows next to the
    //    // row containing the clicked button
    //    var child = $(this).closest('tr').nextAll();
    //    bootbox.confirm({
    //        message: "Do you want to delete this row?",
    //        callback: function (result) {
    //            $('.bootbox').modal('hide');
    //            if (result == true) {
    //                var $tdDoctype = row.find("td:nth-child(2)");
    //                var DocType = $tdDoctype.text().trim();
    //                var $tdDocName = row.find("td:nth-child(3)");
    //                var DocName = $tdDocName.text().trim();
    //                debugger;

    //                var dig = parseInt(row.find("td:nth-child(1)").text());
    //                $("#slNumber").val(dig - 1);

    //                // Iterating across all the rows
    //                // obtained to change the index
    //                child.each(function () {
    //                    var dig = parseInt($(this).find("td:nth-child(1)").text());
    //                    $("#slNumber").val(dig - 1);
    //                    // Modifying row index.
    //                    $(this).find("td:nth-child(1)").text(dig - 1);
    //                });
    //                $.ajax({
    //                    url: "/TenderingDetail/RemoveDocumentDetailFromGrid",
    //                    type: "POST",
    //                    data: {
    //                        DocType: DocType,
    //                        DocName: DocName
    //                    },
    //                    success: function (data) {
    //                        row.remove();
    //                    }
    //                });
    //            }

    //        }
    //    });
    //});



    function GetSendQPObject() {
        debugger;
        var objQuestionPaperSetsItem = [];
        var AddQPToNotificationGrid = $("#QuestionpapersetGrid").DataTable();
        AddQPToNotificationGrid.rows().every(function (rowIdx, tableLoop, rowLoop) {
            var d = this.data();
            var obj = new Object();
            obj.CourseTypeId = d[11];
            obj.TradeTypeId = d[12];
            obj.TradeId = d[13];
            obj.TradeYearId = d[14];
            obj.ExamTypeId = d[15];
            obj.SubjectTypeId = d[16];
            obj.SubjectId = d[17];
            obj.ExamDate = d[19];
            obj.QuestionPaper = d[8];
            debugger;
            obj.UploadFiles = d[9];
            debugger;
            objQuestionPaperSetsItem.push(obj);
        });
        return objQuestionPaperSetsItem;
    }


    function MergeCommonRows(table, columnIndexToMerge) {

        //traverse through each of the row for given column
        // identify next and previous cell text
        // merge them if both are same
        var previous = null;
        var cellToExtend = null;
        var col1 = null;
        table.find("td:nth-child(" + columnIndexToMerge + ")").each(function () {
            var jthis = $(this);
            var content1 = jthis.parent('tr').children().first().text();
            if (col1 !== content1) {
                previous = null;
                col1 = content1;
            }
            var content = jthis.text()
            if (previous == content && content !== "") {
                jthis.remove();
                if (cellToExtend.attr("rowspan") == undefined) {
                    cellToExtend.attr("rowspan", 2);
                }
                else {
                    currentrowspan = parseInt(cellToExtend.attr("rowspan"));
                    cellToExtend.attr("rowspan", currentrowspan + 1);
                }
            }
            else {
                previous = content;
                cellToExtend = jthis;
            }
        });
    }



</script>
<style>
    button {
        background-color: #5A8CD3;
        color: white;
    }

    .content-box-gray .content {
        overflow: hidden;
        padding: 10px;
        font-size: 15px;
        border-bottom-left-radius: 5px;
        border-bottom-right-radius: 5px;
        border: 1px solid gray;
        color: #3385FF;
    }

    .content-box-gray .title {
        height: 50px;
        line-height: 30px;
        border-top-left-radius: 5px;
        border-top-right-radius: 5px;
        font-size: 18px;
        font-weight: bold;
        font-family: verdana;
        display: block;
        color: white;
        display: block;
        padding: 10px;
        border: 1px solid gray;
        border-bottom: none;
    }
</style>
<style>
    /*select {
            padding-bottom: 50px;
        }*/

    .border {
        border: 1px solid black;
    }

    .new {
        background-color: "#e6ffee";
    }

    .font {
        font-size: 12px;
        font-weight: 700;
        font-family: Arial, Helvetica,sans-serif;
    }

    .smallheading {
        font-size: 18px;
        font-weight: 700;
        font-family: Arial, Helvetica,sans-serif;
        padding: 20px;
    }

    .bigheading {
        font-size: 32px;
        font-weight: 700;
        font-family: Arial, Helvetica,sans-serif;
    }

    .midheading {
        font-size: 24px;
        font-weight: 700;
        font-family: Arial, Helvetica,sans-serif;
    }

    a {
        color: #195c9f;
        text-decoration: none;
    }

    textarea.form-control {
        height: auto;
        float: inline-start;
        margin-left: 0px !important;
    }


    th {
        background-color: #195c9f;
        color: white;
        text-align: center;
    }

    .dataTables_wrapper .dataTables_length, .dataTables_wrapper .dataTables_filter, .dataTables_wrapper .dataTables_info, .dataTables_wrapper .dataTables_processing, .dataTables_wrapper .dataTables_paginate {
        color: #fff;
    }

        .dataTables_wrapper .dataTables_paginate .paginate_button.disabled, .dataTables_wrapper .dataTables_paginate .paginate_button.disabled:hover, .dataTables_wrapper .dataTables_paginate .paginate_button.disabled:active {
            cursor: default;
            color: #fff !important;
            border: 1px solid transparent;
            background: transparent;
            box-shadow: none;
        }

    .btn-primary {
        color: #fff;
        background-color: #195c9f;
        border-color: #195c9f;
    }

    .nav-tabs > li.active > a, .nav-tabs > li.active > a:hover, .nav-tabs > li.active > a:focus {
        color: #555;
        cursor: default;
        background-color: #1b191929;
        border: 1px solid #ddd;
        border-bottom-color: transparent;
    }

    .panel-heading {
        padding: 10px 15px;
        border-bottom: 1px solid transparent;
        border-top-left-radius: 3px;
        border-top-right-radius: 3px;
        font-size: 12px;
    }

    .panel-default > .panel-heading {
        color: #333;
        background-color: #195c9f;
        border-color: #ddd;
        color: white;
        font-weight: 700;
        font-family: Arial, Helvetica,sans-serif;
        font-size: 12px;
    }

    .row {
        margin-right: 0px;
        margin-left: 0px;
        padding: 10px;
        background-color: #80808014;
    }

    .col-md-12 {
        position: relative;
        min-height: 1px;
        padding-right: 0px;
        padding-left: 0px;
    }

    label {
        margin: 0;
        font-weight: 700;
        font-size: 12px;
        color: black;
        font-family: Arial, Helvetica,sans-serif;
    }

    .head1 {
        color: #195c9f;
        text-align: center;
        font-weight: 700;
        background-color: #195c9f;
        color: white;
    }

    .td1 {
        background-color: #195c9f;
        color: #fff;
    }

    .head {
        color: #195c9f;
        text-align: center;
        font-weight: 700;
        margin: -50px;
    }

    .table > thead:first-child > tr:first-child > th, .table > caption + thead > tr:first-child > td, .table > colgroup + thead > tr:first-child > td, .table > thead:first-child > tr:first-child > td {
        border-top: 0;
        text-align: center;
    }

    .form-control {
        display: block;
        width: 100%;
        height: 34px;
        padding: 6px 12px;
        font-weight: 700;
        font-family: Arial, Helvetica,sans-serif;
        font-size: 12px;
        line-height: 1.42857143;
        color: #555;
        background-color: #fff;
        background-image: none;
        border: 1px solid #ccc;
        border-radius: 4px;
        -webkit-box-shadow: inset 0 1px 1px rgb(0 0 0 / 8%);
        box-shadow: inset 0 1px 1px rgb(0 0 0 / 8%);
        -webkit-transition: border-color ease-in-out .15s, -webkit-box-shadow ease-in-out .15s;
        -o-transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
        transition: border-color ease-in-out .15s, box-shadow ease-in-out .15s;
    }

    .bg {
        background-color: white;
    }
    .breadcrumb {
        text-align: right;
        border: none;
        margin: 0;
        background: none;
        border-radius: 0;
        float: left;
    }
</style>
<br /><br /><br />
<h4>



</h4>


<div class="tab-content bg font">
    <ul class="nav nav-tabs">
        <li id="tabli1">
            <a href="#tab_1" id="tab1" data-toggle="tab">Add Question Papers Details</a>
        </li>
        <li id="tabli2">
            <a href="#tab_2" id="tab2" data-toggle="tab">Modify The Question Papers Sets</a>
        </li>
        @*<li id="tabli3">
                <a href="#tab_3" id="tab3" data-toggle="tab">Status of Question papers records</a>
            </li>*@
    </ul>
    <div class="tab-pane fade" id="tab_1">
        <div class="container-fluid" style="background-color:white;box-shadow: 0 2px 4px rgba(0,0,0,0.6);padding:20px;">
            <div class="row border">
                <div class="breadcrumb font">
                    <span class="inline odd first"><a href="/Home/index">Home</a></span> <span class="delimiter">&gt;</span><span class="inline odd last">
    Add Question Papers Details
</span>
                </div>
                <div class="col-lg-12">
                    <h2 class="head1">Add Question Papers Details</h2>
                    <br /><br />
                    <div class="form-group row">
                        <div class="col-lg-4 col-md-4">
                            <div class="col-md-6">
                                <label for="txtAgencyRegnNo">Course Type<span style="color:red"> *</span></label>
                            </div>
                            <div class="col-md-6">
                                @Html.DropDownListFor(model => model.course_id, new SelectList(Model.CourseTypeList, "Value", "Text"), new { @class = "form-control select2" })
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-4">
                            <div class="col-md-6">
                                <label for="txtAgencyRegnNo">Trade Type<span style="color:red"> *</span></label>
                            </div>
                            <div class="col-md-6">
                                @Html.DropDownListFor(model => model.trade_type_id, new SelectList(Model.TradeTypeList, "Value", "Text"), new { @class = "form-control select2", @onchange = "GetTradeList()" })
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-4">
                            <div class="col-md-6">
                                <label for="txtAgencyRegnNo">Trade<span style="color:red"> *</span></label>
                            </div>
                            <div class="col-md-6">
                                @Html.DropDownListFor(model => model.trade_id, new SelectList(Model.TradeList, "Value", "Text"), new { @class = "form-control select2", @onchange = "GetTradeYearList()" })
                            </div>
                        </div>
                    </div>
                    <div class="form-group row">
                        <div class="col-lg-4 col-md-4">
                            <div class="col-md-6">
                                <label for="txtAgencyRegnNo">Trade Year<span style="color:red"> *</span></label>
                            </div>
                            <div class="col-md-6">
                                @Html.DropDownListFor(model => model.trade_year_id, new SelectList(Model.TradeYearList, "Value", "Text"), new { @class = "form-control select2" })
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-4">
                            <div class="col-md-6">
                                <label for="txtAgencyRegnNo">Exam Type<span style="color:red"> *</span></label>
                            </div>
                            <div class="col-md-6">
                                @Html.DropDownListFor(model => model.exam_type_id, new SelectList(Model.ExamTypeList, "Value", "Text"), new { @class = "form-control select2" })
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-4">
            <div class="col-md-6">
                <label for="txtAgencyRegnNo">Subject Type<span style="color:red"> *</span></label>
            </div>
            <div class="col-md-6">
                @*@Html.DropDownListFor(model => model.subject_type_id, new SelectList(Model.SubjectTypeList, "Value", "Text"), new { @class = "form-control select2", @onchange = "GetSubjectList()" })*@
                @Html.DropDownListFor(model => model.subject_type_id, Model.SubjectTypeList, new { @class = "form-control select2", @onchange = "GetSubjectList()" })
            </div>
        </div>
                    </div>

                    <div class="form-group row">
                        <div class="col-lg-4 col-md-4">
                            <div class="col-md-6">
                                <label for="txtAgencyRegnNo">Subject<span style="color:red"> *</span></label>
                            </div>
                            <div class="col-md-6">
                                <select id="mySkills" multiple="multiple" required name="mySkillsName" onchange="GetExamDate()" class="form-control select2">
                                    @if (ViewBag.mySkills != null)
                                    {
                                        foreach (var item in ViewBag.mySkills)
                                        {
                                            if (item.Text != null)
                                            {
                                                <option value="@item.Value">
                                                    @item.Text
                                                </option>
                                            }
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="col-lg-4 col-md-4">
                            <div class="col-md-6">
                                <label for="txtAgencyRegnNo">Exam Date<span style="color:red"> *</span></label>
                            </div>
                            <div class="col-md-6">
                                @Html.TextBoxFor(x => x.ExamDate, new { @class = "form-control" })
                                @*@Html.TextBoxFor(x => x.ExamDate, new { @Value = @DateTime.Now.ToShortDateString() })*@
                            </div>
                        </div>

                    </div>

                    <div class="col-lg-4 col-md-4">
                        <div class="col-md-6">
                            <label for="txtAgencyRegnNo">Question Paper Set<span style="color:red"> *</span></label>
                        </div>
                        <div class="col-md-6">

                            @Html.DropDownListFor(model => model.qp_id, new SelectList(Model.QuestionPaperSet, "Value", "Text"), new { @id = "qp", @class = "form-control select2" })
                        </div>
                    </div>
                    <div class="lifile">

                        @Html.TextBoxFor(m => m.qpst_file_path, new { @id = "file", type = "file" , value = "", @class = "medium-input" })


                        @Html.ValidationMessageFor(m => m.qpst_file_path)

                    </div>

                    @*</div>*@

                    <br />  <br />  <br />  <br />


                    <div class="col-lg-4 col-md-4">
                        <div class="col-md-6">
                            <input type="button" value="Add Question Papers Details" class="btn btn-primary" style="margin-left:15px; width:250px;" id="btnAddquestion" />
                           </div>
                            <div class="col-md-6">
                                <input type="button" value="Clear" class="btn btn-primary" style="margin-left:15px;  width:150px;" id="btnClearQP" />
                            </div>
                            <div class="col-md-6">
                            </div>
                        </div>
                    <br />
                    <br />      <br />

                    <br />
                    <br />
                    <table class="table table-bordered table-hover" id="QuestionpapersetGrid">

                        <thead>
                            <tr style="background:limegreen;">
                            <tr style="background:limegreen;">
                                <th>Course Type</th>
                                <th>Trade Type</th>
                                <th>Trade </th>
                                <th>Trade Year</th>
                                <th>Exam Type</th>
                                <th>Subject Type</th>
                                <th>Subject</th>
                                <th>Exam Date</th>
                                <th>Question Papers</th>
                                <th>Uploaded Files</th>
                                <th>Action</th>
                                @*<th th style="background-color:cornflowerblue">View</th>*@

                                <td style="display:none">CourseTypeId</td>
                                <td style="display:none">TradeTypeId</td>
                                <td style="display:none">TradeId</td>
                                <td style="display:none">TradeYearId</td>
                                <td style="display:none">ExamTypeId</td>
                                <td style="display:none">SubjectTypeID</td>
                                <td style="display:none">SubjectId</td>
                                <td style="display:none">FilePath</td>
                            </tr>
                        </thead>
                        <tbody id="tbodySendQP">
                            @if (Model.QuestionPaperSetsList != null)
                            {
                                foreach (var item in Model.QuestionPaperSetsList.objQuestionPaperSetsItem)
                                {
                            <tr>
                                <td>@item.CourseTypeId</td>
                                <td>@item.TradeTypeId</td>
                                <td>@item.TradeId</td>
                                <td>@item.TradeYearId</td>
                                <td>@item.ExamTypeId</td>
                                <td>@item.SubjectTypeId</td>
                                <td>@item.SubjectId</td>
                                <td>@item.ExamDate</td>
                                <td>@item.QuestionPaper</td>
                                <td>@item.UploadFiles</td>
                                <td>
                                    <a class="Delete" href="javascript:;">Delete</a>
                                    <a class="Edit" href="javascript:;">Edit</a>
                                </td>
                                @*<td>
            <a href="@Url.Content("../../" + item.UploadFiles+"//"+item.QuestionPaper)" data-toggle="tooltip" data-placement="top" title="View Existing File" class="View" style="color:black" target="_blank">View</a>
        </td>*@

                                <td style="display:none">@item.CourseTypeId</td>
                                <td style="display:none">@item.TradeTypeId</td>
                                <td style="display:none">@item.TradeId</td>
                                <td style="display:none">@item.TradeYearId</td>
                                <td style="display:none">@item.ExamTypeId</td>
                                <td style="display:none">@item.SubjectTypeId</td>
                                <td style="display:none">@item.SubjectId</td>
                                <td style="display:none">FilePath</td>
                            </tr>
                                }
                            }

                        </tbody>
                    </table>
                    <br />
                    <div class="form-group row">
                        <div class="col-lg-12 col-md-12">
                            <div class="col-md-6 col-lg-offset-5">
                                @*<input type="button" value="Clear" class="btn btn-success" style="margin-left:15px;" id="btnClearQP" />*@
                                <input type="button" id="btnSaveSendQP" value="Save" class="btn btn-success" style="margin-left:10px" />
                            </div>
                        </div>
                    </div>

                </div>
            </div>

        </div>
        <br /><br />
    </div>

    <div class="tab-pane fade" id="tab_2">

        @Html.Action("GetSearchModifyQuestionPapers", "Notification")
        @*@Html.Action("Notificationstatus", "Notification")*@

    </div>
    @*<div class="tab-pane fade" id="tab_3">

            @Html.Action("QPSStatus", "Notification")


        </div>*@

    <br /><br />
</div>



<script type="text/jscript">
    //get file size
    function GetFileSize(fileid) {
        // debugger;
        try {
            var fileSize = 0;
            //for IE
            if (jQuery.browser.msie) {
                //before making an object of ActiveXObject,
                //please make sure ActiveX is enabled in your IE browser
                var objFSO = new ActiveXObject("Scripting.FileSystemObject");
                var filePath = $("#" + fileid)[0].value;
                var objFile = objFSO.getFile(filePath);
                var fileSize = objFile.size; //size in kb
                fileSize = fileSize / 1048576; //size in mb
            }
            //for FF, Safari, Opeara and Others
            else {
                fileSize = $("#" + fileid)[0].files[0].size //size in kb
                fileSize = fileSize / 1048576; //size in mb
            }

            return fileSize;
        }
        catch (e) {
            alert("Error is :" + e);
        }
    }

    jQuery.browser = {};
    (function () {
        jQuery.browser.msie = false;
        jQuery.browser.version = 0;
        if (navigator.userAgent.match(/MSIE ([0-9]+)\./)) {
            jQuery.browser.msie = true;
            jQuery.browser.version = RegExp.$1;
        }
    })();

    //get file path from client system
    function getNameFromPath(strFilepath) {
        var objRE = new RegExp(/([^\/\\]+)$/);
        var strName = objRE.exec(strFilepath);

        if (strName == null) {
            return null;
        }
        else {
            return strName[0];
        }
    }

    $(function () {
        $("#file").change(function () {
            // debugger;
            var file = getNameFromPath($(this).val());
            if (file != null) {
                var extension = file.substr((file.lastIndexOf('.') + 1));
                switch (extension) {
                    case 'jpg':
                    case 'png':
                    case 'gif':
                    case 'pdf':
                        flag = true;
                        break;
                    default:
                        flag = false;
                }
            }
            if (flag == false) {
                $(".lifile > span").text("You can upload only jpg,png,gif,pdf extension file");
                return false;
            }
            else {
                var size = GetFileSize('file');
                if (size > 3) {
                    $(".lifile > span").text("You can upload file up to 3 MB");
                }
                else {
                    $(".lifile > span").text("");
                }
            }
        });
    });
    function GetSubjectList() {
        debugger;
        var SubjectTypeId = $('#subject_type_id :selected').val();
        var CourseTypeId = $('#course_id :selected').val();
        var TradeId = $('#trade_id :selected').val();
        $.ajax({
            type: 'POST',
            url: '/Notification/GetSubjectList',
            data: { CourseTypeId: CourseTypeId, STradeId: TradeId, subjectType: SubjectTypeId},
            success: function (data) {
                if (data.length > 0) {
                    $("#mySkills").empty();
                    $.each(data, function (key, value) {
                        $("#mySkills").append($("<option></option>").val(value.Value).html(value.Text));
                    });
                    $("#mySkills").trigger('change');
                }
            }
        });

        //var subject_type_id = $('#subject_type_id :selected').val();
        //debugger;
        //$.ajax({
        //    type: 'POST',
        //    url: '/Notification/GetExamDate',
        //    data: { SubjectId: subject_type_id },
        //    success: function (data) {
        //        if (data.length > 0) {
        //            $("#ExamDate").empty();

        //            $('#ExamDate').val(data);


        //            $("#ExamDate").trigger('change');
        //        }
        //    }
        //});
    }
    function GetTradeList() {
        var TradeTypeId = $('#trade_type_id :selected').val();
        $.ajax({
            type: 'POST',
            url: '/Notification/GetTradeListQP',
            data: { TradeTypeId: TradeTypeId },
            success: function (data) {
                if (data.length > 0) {
                    $("#TradeId").empty();
                    $.each(data, function (key, value) {
                        $("#TradeId").append($("<option></option>").val(value.Value).html(value.Text));
                    });
                    $("#TradeId").trigger('change');
                }
            }
        });
    }
    function GetTradeYearList() {
        var TradeId = $('#TradeId :selected').val();
        $.ajax({
            type: 'POST',
            url: '/Notification/GetTradeYearList',
            data: { TradeId: TradeId },
            success: function (data) {
                if (data.length > 0) {
                    $("#TradeYearId").empty();
                    $.each(data, function (key, value) {
                        $("#TradeYearId").append($("<option></option>").val(value.Value).html(value.Text));
                    });
                    $("#TradeYearId").trigger('change');
                }
            }
        });
    }



    $("#btnClearQP").click(function (e) {
        clearNotification();
    });

    function clearNotification() {
        $("#course_id").val('');
        $("#trade_type_id").val('');
        $("#trade_id").val('');
        $("#trade_year_id").val('');
        $("#exam_type_id").val('');
        $("#subject_type_id").val('');
        $('#mySkills').prop('selectedIndex', 0);
        $("#ExamDate").val('');
        $("#qp  option:selected").text('');
        $("#qpst_file_path").val('');

        $('#QPToNotificationGrid tbody tr').remove();
    }
    
    //Searching the QP for Modifying

    $('#QuestionpapersetModifyGrid').click(function (e) {
        // debugger;
        var Course_Type = $('#course_id :selected').text();
        var Trade_Type = $('#trade_type_id :selected').text();
        var Trade = $('#trade_id :selected').text();
        var Trade_Year = $('#trade_year_id :selected').text();
        var Exam_Type = $('#exam_type_id :selected').text();
        var Subject_Type = $('#subject_type_id :selected').text();

        var Subject = $('#mySkills option:selected')
            .toArray().map(item => item.text).join(); //$('#SubjectId :selected').text();
        //var Exam_date = $('#ExamDate').val();

        var CourseTypeId = $('#course_id :selected').val();
        var TradeTypeId = $('#trade_type_id :selected').val();
        var TradeId = $('#trade_id :selected').val();
        var TradeYearId = $('#trade_year_id :selected').val();
        var ExamTypeId = $('#exam_type_id :selected').val();
        var SubjectTypeId = $('#subject_type_id :selected').val();
        var SubjectID = $('#mySkills option:selected')
            .toArray().map(item => item.value).join();

        //  debugger;
        var Question_paper = $("#qp  option:selected").text();
        var Question_paper1 = $("#qp  option:selected").text().toArray().map(item => item.value).join();
        //  var pdf_file = $('#file').val();
        //    $("#QuestionpapersetGrid").append("<tr><td align='center'>" + Course_Type + "</td><td>" + Trade_Type + "</td><td align='center'>" + Trade + "</td><td>" + Trade_Year + "</td><td>" + Exam_Type + "</td><td align='center'>" + Subject_Type + "</td><td align='center'>" + Subject + "</td><td align='center'>" + Exam_date + "</td><td align='center'>" + Question_paper + "</td><td align='center'>" + pdf_file + "</td><td><a class='text_custom_green noExport btn btn-primary Delete' href='javascript:;'>Delete</a></td><td style='display: none'>" + CourseTypeId + "</td><td style='display: none'>" + TradeTypeId + "</td><td style='display: none'>" + TradeId + "</td><td style='display: none'>" + TradeYearId + "</td><td style='display: none'>" + ExamTypeId + "</td><td style='display: none'>" + SubjectTypeId + "</td><td style='display: none'>" + SubjectID + "</td><td style='display: none'>" + pdf_file + "</td></tr>");
        //$("#QuestionpapersetGrid").append("<tr><td align='center'>" + Course_Type + "</td><td>" + Trade_Type + "</td><td align='center'>" + Trade + "</td><td>" + Trade_Year + "</td><td>" + Exam_Type + "</td><td align='center'>" + Subject_Type + "</td><td align='center'>" + Subject + "</td><td align='center'>" + Exam_date + "</td><td align='center'>" + Question_paper + "</td><td align='center'>" + pdf_file + "</td><td><a class='text_custom_green noExport btn btn-primary Delete' href='javascript:;'>Delete</a></td><td><input type='checkbox' class='text_custom_green noExport btn' id='isInclude'></td><td style='display: none'>" + Subject_Type + "</td><td style='display: none'>" + Subject + "</td></tr>");

        $("#QuestionpapersetGrid").append("<tr><td align='center'>" + Course_Type + "</td><td>" + Trade_Type + "</td><td align='center'>" + Trade + "</td><td>" + Trade_Year + "</td><td>" + Exam_Type + "</td><td align='center'>" + Subject_Type + "</td><td align='center'>" + Subject + "</td><td align='center'>" + Exam_date + "</td><td align='center'>" + Question_paper + "</td><td align='center'>" + pdf_file + "</td><td><a class='text_custom_green noExport btn btn-primary Delete' href='javascript:;'>Delete</a></td><td style='display: none'>" + Course_Type + "</td><td style='display: none'>" + Trade_Type + "</td><td style='display: none'>" + Trade + "</td><td style='display: none'>" + Trade_Year + "</td><td style='display: none'>" + Exam_Type + "</td><td style='display: none'>" + Subject_Type + "</td><td style='display: none'>" + Subject + "</td><td style='display: none'>" + pdf_file + "</td></tr>");
        bootbox.alert("Question paper set Added Sucessfully.");

    });
    // debugger;
    //course_idmodify   trade_type_idmodify   trade_idmodify  trade_year_idmodify exam_type_idmodify  subject_type_idmodify
    $("#btnSearchQP1").click(function (e) {
        //$(document).ready(function () {
        //function abc() {
        // var rollNo = $("#Trainee_Roll_Num").val();
        // debugger;


        //   var Course_Type = $('#course_idmodify option:selected').text();
        //var Course_Type = $("#course_idmodify option:selected").val();
        var Course_Type = $("#course_idmodify option:selected").val();
        var Trade_Type = $('#trade_type_idmodify option:selected').val();
        var Trade = $('#trade_idmodify option:selected').val();
        var Trade_Year = $('#trade_year_idmodify option:selected').text();
        var Exam_Type = $('#exam_type_idmodify option:selected').text();
        var Subject_Type = $('#subject_type_idmodify option:selected').text();

        var Subject = $('#mySkills option:selected')
            .toArray().map(item => item.text).join();


        $.ajax({
            type: "get",
            url: '/Notification/GetSearchModifyQuestionPapers',
            data: { CourseTypeID: Course_Type, TradeTypeID: Trade_Type, TradeID: Trade, TradeYearID: Trade_Year, ExamTypeID: Exam_Type, ExamSubTypeID: Subject_Type, ExamSubID: Subject },
            success: function (data) {


                // var urlPath = "../../Content/Uploads/Tendering/" + Desc + "/" + encodeURIComponent(document);

                // debugger;
                if (data.length > 0) {
                    // debugger;

                    $("#tbodyQuestionpapersetModifyGrid1").empty(); //tbodyModify_Attend
                    var slNo = 1;
                    $.each(data, function (id, modif) {

                        //   var pdfUrlPath = "../../Content/Uploads/" + encodeURIComponent(modif.attendSavePath);
                        // var excelUrlPath = "../../Content/Uploads/" + encodeURIComponent(modif.attendExcelPath);
                        //var markup = "<tr><td>" + slNo + "</td><td>" + modif.Day + "</td><td>" + dateFormat(new Date(parseInt((modif.ECT_ExamDate).match(/\d+/)[0]))) + "</td><td id = 'startTime'>" + Formattime(new Date(parseInt((modif.ECT_Exam_Start_Time).match(/\d+/)[0]))) + "</td><td>" + Formattime(new Date(parseInt((modif.ECT_Exam_End_Time).match(/\d+/)[0]))) + "</td><td>" + modif.TradeYr + "</td><td>" + modif.Subject + "</td><td>" + modif.BlockNo + "</td><td>" + "<a href=" + pdfUrlPath + " target='_blank'>View</a>" + "<input class= 'btn btn-success' style='align:right; width:100%;' type='file' id='UploadDocsFile' onchange = 'Upload()'>" + "</td><td>" + "<a href=" + excelUrlPath + " target='_blank'>View</a>" + "<input class= 'btn btn-success' style='align:right; width:100%;' type='file' id='UploadExcelFile' onchange = 'ExcelUpload()'>" + "</td></tr>";
                        var markup = "<tr><td>" + modif.Course_Type + "</td><td>" + modif.Trade_Type + "</td><td>" + "</td><td>" + modif.Trade + "</td><td>" + "</td><td id = 'startTime'>" + "</td><td>" + modif.Trade_Year + "</td><td>" + "</td><td>" + "</td><td>" + modif.Exam_Type + "</td><td>" + "</td><td>" + modif.Subject_Type + "</td><td>" + modif.Subject + "</td>" + +"</td></tr>";
                        $("#tbodyQuestionpapersetModifyGrid1").append(markup);  //tbodyModify_Attend
                        slNo++;
                    });
                }
            }
        });
    });
        //    }
        //});

     if (@Model.selectTab != null) {
        debugger;
        if (@Model.selectTab == 0) {
            $('.nav-tabs li:eq(0) a').tab('show')
        }
        else if (@Model.selectTab == 1) {
            $('.nav-tabs li:eq(1) a').tab('show')
        }
        else if (@Model.selectTab == 2) {
            $('.nav-tabs li:eq(2) a').tab('show')
        }
        @*else if (@Model.selectTab == 3) {
            $('.nav-tabs li:eq(3) a').tab('show')
        }*@

    }
</script>

@*<script src="https://code.jquery.com/jquery-3.1.0.min.js"></script>
    <script src="~/Scripts/jquery-3.3.1.js"></script>
    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>*@
