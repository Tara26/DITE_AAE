    @model Models.ExamNotification.Notification
@{
    ViewBag.Title = "Notificationstatus1";
    int sno = 1;

}


<meta name="viewport" content="width=device-width" />
<style>
    .modal-content img {
        width: 20%;
    }
</style>
<link href="~/Content/jquery.dataTables.min.css" rel="stylesheet" />
<script src="~/Scripts/jquery.dataTables.min.js"></script>
<script src="~/Content/frontend/js/SmoothScroll.min.js"></script>
<script src="~/Content/frontend/js/move-top.js"></script>
<script src="~/Content/frontend/js/easing.js"></script>
<script src="~/Scripts/bootbox.js"></script>
<script src="~/Scripts/bootbox.min.js"></script>
<script src="~/Scripts/bootbox.locales.min.js"></script>
@*<script src="~/Content/jquery.dataTables.min.js" type="text/javascript"></script>*@
@*<script src="https://code.jquery.com/jquery-3.5.1.js" type="text/javascript"></script>*@
@*<script src="https://cdn.datatables.net/1.10.23/js/jquery.dataTables.min.js" type="text/javascript"></script>*@
@*<script src="https://cdn.datatables.net/fixedheader/3.1.7/js/dataTables.fixedHeader.min.js" type="text/javascript"></script>*@
<link href="~/Content/frontend/css/style1.css" rel="stylesheet" />

<script src="~/Scripts/DigitalSignCerti.min.js"></script>
<script>
    function ApproveToCW_DSCApproval(statusforCW) {

        debugger;
        var RefID = "R123";
        var EmpID = "EMPID";
        var notificationID1 = document.getElementById("notifynum").innerText;
        var notifID1 = notif_ID;


        var comments1 = $("#comments").val();
        var RoleId = $('#SelectedRoleId :selected').val();
        var RoleName = $('#SelectedRoleId :selected').val();
        var roleid = 2;
        var dropdown = $("#SelectedRoleId").val();

        if (statusforCW == 110) {
            bootbox.confirm({
                title: "Confirm",
                message: "Are you sure you want to Approve this Exam Notification No." + NotifyNum.bold() + "?",
                buttons: {
                    confirm: {
                        label: 'Yes',
                        className: 'btn-success'
                    },
                    cancel: {
                        label: 'No',
                        className: 'btn-danger'
                    }
                },
                callback: function (result) {
                    if (result == true) {
                        DSCSignRegSignedExtension.getSelectedCertificate(RefID, EmpID, notificationID1)
                            .then(
                            function (CertInfo) {        //Success returns Certificate Subject and Thumbprint
                                debugger;
                                    var data = JSON.parse(CertInfo);
                                    console.debug(data);
                                    $.ajax({
                                        url: "/Notification/PDFSign",
                                        type: "POST",
                                        data: {
                                            certClient: JSON.stringify(data),
                                            SelCertAttribs: data.SelCertAttribs,
                                            notifIDDesc: notificationID1,
                                            notifID: notifID1,
                                            Status: status,
                                            Id: ExamNotifyId,
                                            Status: StatusID,
                                            Loginid: roleid,
                                            comments: comments1,
                                            StatusforCW: statusforCW
                                        },
                                        cache: false,
                                        //success: function (response) {

                                        //    // Signing Operation Completed
                                        //    if (data.Success) {
                                        //        $("#ResultDisplay").removeClass().addClass("alert alert-success").html(data.message);
                                        //        $("#showPDF").prop("disabled", false)
                                        //        $.ajax({
                                        //            type: "POST",
                                        //            url: "/Notification/BackToCW",
                                        //            dataType: 'json',
                                        //            data: {
                                        //                Id: ExamNotifyId,
                                        //                Status: StatusID,
                                        //                Loginid: roleid,
                                        //                //comments: comments,
                                        //                comments: comments1,
                                        //                StatusforCW: statusforCW,



                                        //            },
                                        //        });
                                        //    }
                                        //}
                                        success: function (response) {
                                            debugger;
                                            if (response.res == "Saved") {
                                                var _msg = "Exam Notificaion No" + NotifyNum.bold() + " Approved Successfully and Sent back to Case Worker for Publish the Exam Notification.";
                                                //alert(_msg);
                                                bootbox.alert({ message: _msg, closeButton: false, callback: function () { window.location.href = window.location.href; } });
                                            }
                                            else {
                                                var _msg = "Fail to Approve";
                                                bootbox.alert(_msg);
                                            }
                                        }, error: function (e) {
                                            var _msg = "Something went wrong.";
                                            bootbox.alert(_msg);
                                            $("#preloder, .loader").hide();
                                        }

                                        //}
                                        //else {
                                        //    $("#ResultDisplay").removeClass().addClass("alert alert-danger").html(data.message);
                                        //}

                                    });
                                }
                            );
                    }
                }
            });
        }

        if (statusforCW == 102) {
            bootbox.confirm({
                title: "Confirm",
                message: "Are you sure you want to send this Exam Notification No. " + NotifyNum.bold() + " to Case Worker for further modification?",
                buttons: {
                    confirm: {
                        label: 'Yes',
                        className: 'btn-success'
                    },
                    cancel: {
                        label: 'No',
                        className: 'btn-danger'
                    }
                },
                callback: function (result) {
                    if (result == true) {

                        $.ajax({
                            type: "POST",
                            url: "/Notification/BackToCW",
                            dataType: 'json',
                            data: {
                                Id: ExamNotifyId,
                                Status: StatusID,
                                Loginid: roleid,
                                //comments: comments,
                                comments: comments1,
                                StatusforCW: statusforCW
                            },

                            success: function (response) {
                                if (response.res == "Saved") {
                                    var _msg = "Exam Notificaion No. " + NotifyNum.bold() + " Successfully Sent back to Case worker for Modification.";
                                    //alert(_msg);
                                    bootbox.alert({ message: _msg, closeButton: false, callback: function () { window.location.href = window.location.href; } });
                                }
                                else {
                                    var _msg = "Fail to Approve";
                                    bootbox.alert(_msg);
                                }
                            }, error: function (e) {
                                var _msg = "Something went wrong.";
                                bootbox.alert(_msg);
                                $("#preloder, .loader").hide();
                            }
                        });
                    }
                }
            });
        }
    }

</script>

<style>
    .btn-danger {
        color: #fff;
        background-color: #d9534f;
        border-color: #d43f3a;
        width: 100px;
    }


    .btn-success {
        color: #fff;
        background-color: #449d44;
        border-color: #398439;
        width: 100px;
    }
</style>
<br /><br />
<input type="hidden" id="hdnSession" data-value="@Request.RequestContext.HttpContext.Session["LoginId"]" />
@if (Session["LoginId"].Equals(Model.RoleId))
{

<div class="content container-fluid font" id="datatable" style="background-color:white;box-shadow: 0 2px 4px rgba(0,0,0,0.6);margin-top:20px; padding:20px;">

        <div class="form-group row" style="border:1px solid black">
            <div class="breadcrumb font">
                <span class="inline odd first"><a href="/Home/index1">Home</a></span> <span class="delimiter">&gt;</span>  <span class="inline odd last">
                    Examination Notification Status
                </span>

            </div>
            <div class="col-lg-12">
                <h2 class="head1">Examination Notification Status</h2>
            </div>
          <div style="padding-bottom:10px"></div>
            <table class="table table-bordered table-hover text-center" style="color:white;" id="tblGrid">
                <thead>
                    <tr class="text-center">
                    <tr class="text-center">
                        <th>Sl. No.</th>
                        <th>Course Type</th>
                        <th style="display:none">Name of the Section</th>
                        <th>Notification Number</th>
                        <th style="display:none">Notification Description</th>
                        <th style="display:none">Notification Type</th>
                        <th>Notification Date</th>
                        <th>Status - Currently With</th>
                        <th style="display:none">Received Date</th>
                        <th>Remarks</th>
                        <th>Action</th>
                        <th style="display:none">Action</th>
                        <th style="display:none">Action</th>
                        <th style="display:none">Action</th>
                        <th style="display:none">Action</th>
                    </tr>
                </thead>

                <tbody style="color:Black;" id="Texamnotification">
                    @foreach (var item in Model.notifications)
                    {
                        <tr>
                            <td>@(sno++)</td>
                            <td>@item.CourseTypeName</td>
                            <td style="display:none">@item.DeptName</td>
                            <td>@item.Exam_Notif_Number</td>
                            <td style="display:none">@item.Description</td>
                            <td style="display:none">@item.Exam_Notif_Desc</td>
                            <td>@item.Exam_notif_date.ToString("dd/MM/yyyy")</td>
                            <td>
                                @if (item.exam_notif_status_desc != "Published Notification")
                                {
                                    <label>@item.exam_notif_status_desc - </label> <label>@item.By</label>
                                }
                                else
                                {
                                    <label>@item.exam_notif_status_desc  </label>
                                }
                            </td>


                            <td style="display:none">
                                @Convert.ToString(string.Format("{0:dd/MM/yyyy}", @item.creation_datetime))
                            </td>
                            <td>
                                @if (item.comcount == 0)
                                {
                                    <a style="text-align:center; float:initial;pointer-events: none; opacity:0.5 " class="btn btn-primary" onclick="GetCommentDetails(@item.Exam_Notif_Id,'@item.Exam_Notif_Number')">View</a>
                                }
                                else
                                {
                                    <a style="text-align:center; float:initial" class="btn btn-primary" onclick="GetCommentDetails(@item.Exam_Notif_Id,'@item.Exam_Notif_Number')">View</a>
                                }
                            </td>
                            <td>
                                <a class="btn btn-primary RateAnalysis" id="btn1" href='javascript:;'>View</a>
                            </td>
                            <td style="display:none">@item.Exam_Notif_Id</td>
                            <td style="display:none">@item.exam_notif_status_id</td>
                            <td style="display:none">@item.comments</td>
                            <td style="display:none">@item.created_by</td>
                        </tr>
                    }
                </tbody>

            </table>
        </div>
    </div>
  

}


    @*<div class="Container" id="myModal" style="box-shadow: 0 2px 4px rgba(0,0,0,0.6);margin:100px;padding:50px;background-color:white;display:none">*@
<div class="Container-fluid" id="myModal" style="margin:10px;padding:10px;background-color:white;display:none">
    <div class="row" style="border:1px solid black">

        <div class="breadcrumb font">
            <span class="inline odd first"><a href="/Home/index1">Home</a></span> <span class="delimiter">&gt;</span>  <span class="inline odd last">
                Examination Notification View
            </span>

        </div>
        <br />
        <div class="row">
            <h2 class="head1">Examination Notification View</h2>
        </div>
        <div class="row">
            @*<div class="col-lg-2"><b>Notification ID:</b></div>
                <div class="col-lg-2">
                    <label id="id"></label>
                </div>*@
            <div class="col-lg-2"><b>Course Type:</b></div>
            <div class="col-lg-2">
                <label id="course" class="opvalues"></label>
            </div>
            <div class="col-lg-2"><b>Name of the Section:</b></div>
            <div class="col-lg-2">
                <label id="dept" class="opvalues"></label>
            </div>
            <div class="col-lg-1"><b>Notification Number:</b></div>
            <div class="col-lg-3">
                <label id="notifynum" class="opvalues"></label>
            </div>
        </div>

        <br /><br />
        <div class="row">

            <div class="col-lg-2"><b>Notification Type:</b></div>
            <div class="col-lg-2">
                <label id="desc1" class="opvalues"></label>
            </div>
            <div class="col-lg-2"><b>Notifiaction Date:</b></div>
            <div class="col-lg-2">
                <label id="datenotify" class="opvalues"></label>
            </div>
            <div class="col-lg-2"><b>Fee Pay Last Date:</b></div>
            <div class="col-lg-2">
                <label id="feepaylastdate" class="opvalues"></label>
            </div>

            @*<div class="col-lg-2">Status</div>
                <div class="col-lg-2">
                    <label id="statusdesc"></label>
                </div>*@
        </div>
        <br /><br />
        <div class="row">

            <div class="col-lg-2"><b>Status:</b></div>
            <div class="col-lg-2">
                <label id="statusdesc" class="opvalues"></label>
            </div>
            @*<div class="col-lg-2"><b>Notification Currently With:</b></div>
                <div class="col-lg-2">
                    <label id="RecordLevel"></label>
                </div>*@

            <div class="col-lg-2"><b>Notification Description:</b></div>
            <div class="col-lg-2">
                <label id="description" class="opvalues"></label>
            </div>
        </div>
        <br /><br /> 
        <div class="row">
           
            <div class="col-lg-4">
              
                <a style="text-align:center; float:initial" class="btn btn-primary" onclick="GetTextEditor()">View Notification Pdf</a>
                
                    @*<a style="text-align:center; float:initial" class="btn btn-primary" onclick="GetCommentDetails()">Edit Notification </a>*@
                </div>
        </div>
        <div class="row">
            <br />

        </div>
        <div class="row">
            <div class="col-lg-offset-1 col-lg-2">
                Remarks
            </div>

            <div class="col-lg-6">
                @Html.TextAreaFor(Model => Model.comments, new { @class = "form-control txtarea1", @rows = "10", @Maxlength = "100" })
            </div>
        </div>
        <br />
        <div class="row">
            @if (!Session["LoginId"].Equals(12))
            {
                <div class="col-lg-offset-1 col-lg-2">
                    Send To
                </div>
                <div class="col-lg-2">
                    @Html.DropDownListFor(model => model.SelectedRoleId, new SelectList(Model.LoginRoleList, "Value", "Text"), new { @class = "form-control select2 secondclass" })
                    @*@Html.ValidationMessageFor(x => x.SelectedRoleId, "", new { @class = "text-danger" })*@
                    <span id="spnselectdropdown" class="text-danger" style="display:none;">Please  Select Hierarcy level</span>

                </div>
            }

            <div class="col-lg-7">
                @if (!Session["LoginId"].Equals(12))
                {
                    <a class=" btn btn-primary" id="sendBtn1" onclick="SendDetails()">Send</a>
                }

                @*<a class=" btn btn-primary" id="sendBtn5" onclick="Reject(102)">Send Back</a>*@
                <a class=" btn btn-primary" id="backbtn">Cancel</a>
                @if (Session["LoginId"].Equals(9) || Session["LoginId"].Equals(10) || Session["LoginId"].Equals(11) || Session["LoginId"].Equals(12))
                {
                    @*<a class=" btn btn-primary sendBtn2" onclick="BackToCW(102)">Changes/Modification</a>*@
                    <a class=" btn btn-primary sendBtn4" onclick="ApproveToCW(102)" style="display:none">Changes/Modification</a>
                    @*<a class=" btn btn-primary sendBtn3" onclick="BackToCW(103)">Approve</a>*@

                    <a class=" btn btn-primary sendBtn3" onclick="ApproveToCW(110)">Approve(Without DSC Key)</a>

                    @* < a class=" btn btn-primary sendBtn3" onclick="ApproveToCW_DSCApproval(110)">Approve(With DSC Key)</a>*@


                }
            </div>
        </div>

        <div class="row">
            <div class="col-lg-offset-1 col-lg-2">
                Send Back To
            </div>
            <div class="col-lg-2">
                @Html.DropDownListFor(model => model.SelectedSBID, new SelectList(Model.LoginRoleListSendBack, "Value", "Text"), new { @class = "form-control select2 secondclass" })
                @*@Html.ValidationMessageFor(x => x.SelectedRoleId, "", new { @class = "text-danger" })*@
                <span id="spnselectdropdown" class="text-danger" style="display:none;">Please  Select Hierarcy level</span>

            </div>
            <div class="col-lg-7">

                <a class=" btn btn-primary" id="sendBtn5" onclick="Reject1(109)">Send Back</a>

            </div>
        </div>
    </div>
</div>


    <div class="modal fade font" id="HistoryRemarksCommentsModal" role="dialog">
        <div class="modal-dialog modal-xl" style="width: 60%; margin: 30px auto; padding: 2px;">
            <div class="modal-content" style="padding:15px;">
                <div class="modal-header">
                    <h2 class="modal-title head1">Remark Details</h2>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>

                <P>Exam Notification Number: <label id="notif"></label></P><br /><br />
                <table class="table table-striped table-hover text-center shadow clswidth" id="GetCommentRemarksDetails" style="width:100% !important" border="1" align="center">
                    <thead>
                        <tr>
                            <th width="20px">Sl. No.</th>
                            <th>Date</th>
                            <th>From</th>
                            <th>To</th>
                            <th>Comments</th>
                        </tr>
                    </thead>
                    <tbody id="tbodyGrid"></tbody>
                </table>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal" style="width: 20%; background-color:forestgreen;color:white;">OK</button>
                </div>
            </div>
        </div>
    </div>
<div class="modal fade font" id="ViewNotificationModal" role="dialog">
    <div class="modal-dialog modal-xl" style="width: 60%; margin: 30px auto; padding: 2px;">
        <div class="modal-content" style="padding:15px;">
            <div class="modal-header">
                <h2 class="head1">Notification Details</h2>
            </div>
            <div style="overflow-y:scroll;overflow-x:scroll;">
                <table class="table table-striped table-hover text-center shadow clswidth" id="tblViewNotification" style="width:100% !important" border="1" align="center">
                    <thead>
                        <tr>
                            <th>SL.No.</th>
                            <th style="display:none;">LoginID</th>
                            <th>Date</th>
                            <th>Officer Name</th>
                            <th>Upload/Download Notofication(.doc)</th>
                            <th>Download Notofication(.pdf)</th>
                            <th style="display:none;">Notofication No.</th>
                        </tr>
                    </thead>
                    <tbody id="viewNotificationFiles"></tbody>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default"  data-dismiss="modal" style="width: 20%; color:white;background-color:red">OK</button>
                <button type="button" class="btn btn-default" onclick="SaveUploadNotifDoc()" data-dismiss="modal" style="width: 20%; color:white;background-color:forestgreen">Save</button>
            </div>
        </div>
    </div>
</div>
<script>
    var sessionValue = $("#hdnSession").data('value');
    $(document).ready(function () {

       
        
            $('#sendBtn5').attr('disabled', 'disabled');
            //$('.sendBtn4').attr('disabled', 'disabled');
            $('.sendBtn3').attr('disabled', 'disabled');
            $('.sendBtn2').attr('disabled', 'disabled');
        $('#sendBtn1').attr('disabled', 'disabled');

        $('.txtarea1').attr('disabled', 'disabled');
        $('.secondclass').attr('disabled', 'disabled');

        $("#tblGrid").DataTable();
        $("#GetCommentRemarksDetails").DataTable();


        $("#btn1").click(function () {
            $("#myModal").toggle();


        });

        $("#backbtn").click(function () {
            $("#datatable").show();
            $("#myModal").hide();
        });

        $("#ViewCommentsbtn").click(function () {
            //alert("button"); // Remove this line if it worked
            //$("#tblMain").hide();
            $("#CommentsGrid").show();
        });

    });

    $("#SelectedRoleId").on('change', function () {
        if ($(this).find('option:selected').val() > 0) {
            $("#SelectedSBID").attr('disabled', true);
            $("#sendBtn5").attr('disabled', true);
            $(".sendBtn4").attr('disabled', true);
            $(".sendBtn3").attr('disabled', true);
        }
        else {
            $("#SelectedSBID").attr('disabled', false);
            $("#sendBtn5").attr('disabled', false);
            $(".sendBtn4").attr('disabled', false);
            $(".sendBtn3").attr('disabled', false);
        }

    });

    $("#SelectedSBID").on('change', function () {
        if ($(this).find('option:selected').val() > 0) {
            $("#SelectedRoleId").attr('disabled', true);
            $("#sendBtn1").attr('disabled', true);
            $(".sendBtn4").attr('disabled', true);
            $(".sendBtn3").attr('disabled', true);
        }
        else {
            $("#SelectedRoleId").attr('disabled', false);
            $("#sendBtn1").attr('disabled', false);
            $(".sendBtn4").attr('disabled', false);
            $(".sendBtn3").attr('disabled', false);
        }

    });

    function GetClientReport() {
        debugger;
        var urlPath = "../../Content//Template//Notification_" + Filename + ".pdf";
        window.open(urlPath, '_blank');

    };

    function SendDetails() {

        var dropdown = $("#SelectedRoleId").val();
        if (dropdown != 0) {
            var comments1 = $("#comments").val();
            var RoleId = $('#SelectedRoleId :selected').val();
            var RoleName = $('#SelectedRoleId :selected').text();
            bootbox.confirm({
                title: "Confirm",
                message: "Are you sure you want to send this Exam Notification No. " + NotifyNum.bold() + " to " + RoleName.bold() +" for Review and Recommend ?",
                buttons: {
                    confirm: {
                        label: 'Yes',
                        className: 'btn-success'
                    },
                    cancel: {
                        label: 'No',
                        className: 'btn-danger'
                    }
                },
                callback: function (result) {
                    if (result == true) {
                        debugger;

                        $.ajax({
                            type: "POST",
                            url: "/Notification/UpdateCommentTransStatus",
                            dataType: 'json',
                            data: {
                                Id: ExamNotifyId,
                                Status: StatusID,
                                Loginid: RoleId,
                                //comments: comments,
                                comments: comments1,
                            },

                            success: function (response) {

                                if (response == "Saved") {
                                    debugger;
                                    var _msg = "Exam Notificaion No. " + NotifyNum.bold() + " Sent Successfully to " + RoleName.bold() + " for Review and Recommend.";
                                    //alert(_msg);
                                    bootbox.alert({ message: _msg, callback: function () { window.location.href = window.location.href; } });

                                }
                                else {
                                    var _msg = "Fail to send";
                                    bootbox.alert(_msg);
                                }
                            }, error: function (e) {
                                var _msg = "Something went wrong.";
                                bootbox.alert(_msg);
                                $("#preloder, .loader").hide();
                            }
                        })
                    }
                }
            });
            //$("#spnselectdropdown").hide();
        }
        else {
            $("#spnselectdropdown").show();
            return false;
        }
        debugger;


    }

    function Reject(statusforCW) {
        var comments1 = $("#comments").val();
        var RoleId = createdby;
        var RoleName = Createdname;
        bootbox.confirm({
            title: "Confirm",
            message: "Are you sure you want to send back this Exam Notification No. " + NotifyNum.bold() + " to " + RoleName.bold(),
            buttons: {
                confirm: {
                    label: 'Yes',
                    className: 'btn-success'
                },
                cancel: {
                    label: 'No',
                    className: 'btn-danger'
                }
            },
            callback: function (result) {
                if (result == true) {
                    debugger;

                    $.ajax({
                        type: "POST",
                        url: "/Notification/Reject",
                        dataType: 'json',
                        data: {
                            Id: ExamNotifyId,
                            Status: StatusID,
                            Loginid: RoleId,
                            //comments: comments,
                            comments: comments1,
                            StatusforCW: statusforCW
                        },

                        success: function (response) {

                            if (response == "Saved") {
                                var _msg = "Notificaion " + NotifyNum.bold() + " Sent Back Successfully";
                                //alert(_msg);
                                bootbox.alert({ message: _msg, callback: function () { window.location.href = window.location.href; } });
                            }
                            else {
                                var _msg = "Fail to send";
                                bootbox.alert(_msg);
                            }
                        }, error: function (e) {
                            var _msg = "Something went wrong.";
                            bootbox.alert(_msg);
                            $("#preloder, .loader").hide();
                        }
                    })
                }
            }
        });

    }

    var NotifyNum = '';
    var ExamNotifyId = '';
    var StatusID = '';
    var Commentsappend = '';
    var StatusDesc = '';
    var status = '';
    var createdby = '';
    var Createdname = '';
    var Filename = '';
    var publishedDesc = '';
    //To get the Signed PDF Path BNM  DSC
    var SignedPdfPath = "";
    var notif_ID = "";
    $("body").on("click", "#Texamnotification .RateAnalysis", function () {
        $("#datatable").hide();
        debugger;
        var row = $(this).closest("tr");
        $('#sendBtn5').attr('disabled', 'disabled');
        $('.sendBtn3').attr('disabled', 'disabled');
        $('.sendBtn2').attr('disabled', 'disabled');
        $('#sendBtn1').attr('disabled', 'disabled');
        $('.txtarea1').attr('disabled', 'disabled');
        $('.secondclass').attr('disabled', 'disabled');

        var xid = row.find("td:nth-child(12)");
        ExamNotifyId = xid.text().trim();
        var loginid = @Session["LoginId"];

        var $tdStatusID = row.find("td:nth-child(13)");
        StatusID = $tdStatusID.text().trim();

        var $tdStatusDesc = row.find("td:nth-child(8)");
        StatusDesc = $tdStatusDesc.text().trim();

        var $tdNotifynum = row.find("td:nth-child(4)");
        NotifyNum = $tdNotifynum.text().trim();

        var $tdcreatedby = row.find("td:nth-child(15)");
        createdby = $tdcreatedby.text();

        //var publishedDesc = '';
       // var Loginid = 0;
        $.ajax({
            type: "POST",
            url: "/Notification/GetDetails",
            dataType: 'json',
            data: {
                //__RequestVerificationToken: token,
                ID: ExamNotifyId,
            },
            success: function (response) {
                debugger;
                $("#id").html(response.Exam_Notif_Id);
                $("#course").html(response.CourseTypeName);
                $("#dept").html(response.DeptName);
                $("#notifynum").html(response.Exam_Notif_Number);
                $("#desc1").html(response.Exam_Notif_Desc);
                $("#filename").html(response.filename);
                //var date = new DateTime(long.Parse(response.Exam_notif_date));

                $("#datenotify").html(dateFormat(new Date(parseInt((response.Exam_notif_date).match(/\d+/)[0]))));
                $("#filepath").html(response.SavePath);
                $('#statusdesc').html(response.exam_notif_status_desc);
                $('#RecordLevel').html(response.RecordLevel);
                $('#description').html(response.Description);
                $('#feepaylastdate').html(dateFormat(new Date(parseInt((response.fee_pay_last_date).match(/\d+/)[0]))));
                $('#login').html(response.login_id);
                status = response.exam_notif_status_id;
                StatusDesc = response.exam_notif_status_desc;
                Filename = response.filename;
                Createdname = response.By;
                Loginid = response.login_id;
                SignedPdfPath = response.getSignedPDFPath;
                notif_ID = response.Exam_Notif_Id;
                //statusdesc = response.exam_notif_status_desc;
                $("#myModal").show();
                if (StatusDesc == 'Published Notification') {
                    $('.sendBtn2').hide();
                    $('.sendBtn4').show();
                    $('.txtarea1').removeAttr('disabled');
                }
                if (Loginid == loginid) {
                    $('.sendBtn4').removeAttr('disabled');
                    $('#sendBtn1').removeAttr('disabled');
                    $('#sendBtn5').removeAttr('disabled');
                    $('.sendBtn2').removeAttr('disabled');
                    $('.sendBtn3').removeAttr('disabled');
                    $('.txtarea1').removeAttr('disabled');
                    $('.secondclass').removeAttr('disabled');
                }

            }, error: function (e) {
                var _msg = "Something went wrong.";
                bootbox.alert(_msg);
                $("#preloder, .loader").hide();
            }
        })




    });

    function dateFormat(d) {
        console.log(d);
        return (d.getDate() + "").padStart(2, "0")
            + "/" + ((d.getMonth() + 1) + "").padStart(2, "0")
            + "/" + d.getFullYear() + " " + Formattime(d); //+ d.getHours() + ":" + d.getMinutes();
    }

    

    function Formattime(t) {
        console.log(t);
        return (t.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' , second: '2-digit' }) + "");//.padStart(2, "0")
        //+ "/" + ((d.getMonth() + 1) + "").padStart(2, "0")
        //+ "/" + d.getFullYear();
    }

    function BackToCW(statusforCW) {
        var comments1 = $("#comments").val();
        var RoleId = $('#SelectedRoleId :selected').val();
        var RoleName = $('#SelectedRoleId :selected').text();

        var dropdown = $("#SelectedRoleId").val();
        if (dropdown != 0) {

            if (statusforCW == 108) {
                bootbox.confirm({
                    title: "Confirm",
                    message: "Are you sure you want to send this Published Exam Notification No. " + NotifyNum.bold() + " to " + RoleName.bold()+ " for further modification?"  ,
                    buttons: {
                        confirm: {
                            label: 'Yes',
                            className: 'btn-success'
                        },
                        cancel: {
                            label: 'No',
                            className: 'btn-danger'
                        }
                    },
                    callback: function (result) {
                        if (result == true) {
                            var comments1 = $("#comments").val();
                            var RoleId = $('#SelectedRoleId :selected').val();
                            $.ajax({
                                type: "POST",
                                url: "/Notification/BackToCW",
                                dataType: 'json',
                                data: {
                                    Id: ExamNotifyId,
                                    Status: StatusID,
                                    Loginid: RoleId,
                                    //comments: comments,
                                    comments: comments1,
                                    StatusforCW: statusforCW
                                },

                                success: function (response) {
                                    if (response.res == "Saved") {
                                        var _msg = "Exam Notificaion No. " + NotifyNum.bold() + " Successfully Sent back to " + RoleName.bold() +" for Modify  Which has been already Published.";
                                        //alert(_msg);
                                        bootbox.alert({ message: _msg, closeButton: false, callback: function () { window.location.href = window.location.href; } });
                                    }
                                    else {
                                        var _msg = "Fail to Approve";
                                        bootbox.alert(_msg);
                                    }
                                }, error: function (e) {
                                    var _msg = "Something went wrong.";
                                    bootbox.alert(_msg);
                                    $("#preloder, .loader").hide();
                                }
                            });
                        }
                    }
                });
            }

            if (statusforCW == 102) {
                bootbox.confirm({
                    title: "Confirm",
                    message: "Are you sure you want to send this Exam Notification No. " + NotifyNum.bold() + " to " + RoleName.bold() +" for further modification?",
                    buttons: {
                        confirm: {
                            label: 'Yes',
                            className: 'btn-success'
                        },
                        cancel: {
                            label: 'No',
                            className: 'btn-danger'
                        }
                    },
                    callback: function (result) {
                        if (result == true) {
                            var comments1 = $("#comments").val();
                            var RoleId = $('#SelectedRoleId :selected').val();
                            $.ajax({
                                type: "POST",
                                url: "/Notification/BackToCW",
                                dataType: 'json',
                                data: {
                                    Id: ExamNotifyId,
                                    Status: StatusID,
                                    Loginid: RoleId,
                                    //comments: comments,
                                    comments: comments1,
                                    StatusforCW: statusforCW
                                },

                                success: function (response) {
                                    if (response.res == "Saved") {
                                        var _msg = "Exam Notificaion No. " + NotifyNum.bold() + " Successfully Sent back to " + RoleName.bold() +" for Modification.";
                                        //alert(_msg);
                                        bootbox.alert({ message: _msg, closeButton: false, callback: function () { window.location.href = window.location.href; } });
                                    }
                                    else {
                                        var _msg = "Fail to Approve";
                                        bootbox.alert(_msg);
                                    }
                                }, error: function (e) {
                                    var _msg = "Something went wrong.";
                                    bootbox.alert(_msg);
                                    $("#preloder, .loader").hide();
                                }
                            });
                        }
                    }
                });
            }



           // $("#spnselectdropdown").hide();
        }
        else {
            $("#spnselectdropdown").show();
            return false;
        }
        debugger;

    }

    function ApproveToCW(statusforCW) {
        debugger;
        var comments1 = $("#comments").val();
        var RoleId = $('#SelectedRoleId :selected').val();
        var RoleName = $('#SelectedRoleId :selected').val();

        var roleid = 2;

        var dropdown = $("#SelectedRoleId").val();

            if (statusforCW == 110) {
                bootbox.confirm({
                    title: "Confirm",
                    message: "Are you sure you want to Approve this Exam Notification No. " + NotifyNum.bold() + "?",
                    buttons: {
                        confirm: {
                            label: 'Yes',
                            className: 'btn-success'
                        },
                        cancel: {
                            label: 'No',
                            className: 'btn-danger'
                        }
                    },
                    callback: function (result) {
                        if (result == true) {

                            $.ajax({
                                type: "POST",
                                url: "/Notification/BackToCW",
                                dataType: 'json',
                                data: {
                                    Id: ExamNotifyId,
                                    Status: StatusID,
                                    Loginid: roleid,
                                    //comments: comments,
                                    comments: comments1,
                                    StatusforCW: statusforCW
                                },

                                success: function (response) {
                                    if (response.res == "Saved") {
                                        var _msg = "Exam Notificaion No. " + NotifyNum.bold() + " Approved Successfully and sent to Case work for publish.";
                                        //alert(_msg);
                                        bootbox.alert({ message: _msg, closeButton: false, callback: function () { window.location.href = window.location.href; } });
                                    }
                                    else {
                                        var _msg = "Fail to Approve";
                                        bootbox.alert(_msg);
                                    }
                                }, error: function (e) {
                                    var _msg = "Something went wrong.";
                                    bootbox.alert(_msg);
                                    $("#preloder, .loader").hide();
                                }
                            });
                        }
                    }
                });
        }

        if (statusforCW == 102) {
            bootbox.confirm({
                title: "Confirm",
                message: "Are you sure you want to send this Exam Notification No. " + NotifyNum.bold() + " to Case Worker for further modification?",
                buttons: {
                    confirm: {
                        label: 'Yes',
                        className: 'btn-success'
                    },
                    cancel: {
                        label: 'No',
                        className: 'btn-danger'
                    }
                },
                callback: function (result) {
                    if (result == true) {

                        $.ajax({
                            type: "POST",
                            url: "/Notification/BackToCW",
                            dataType: 'json',
                            data: {
                                Id: ExamNotifyId,
                                Status: StatusID,
                                Loginid: roleid,
                                //comments: comments,
                                comments: comments1,
                                StatusforCW: statusforCW
                            },

                            success: function (response) {
                                if (response.res == "Saved") {
                                    var _msg = "Exam Notificaion No. " + NotifyNum.bold() + " Successfully Sent back to Case Worker for Modification.";
                                    //alert(_msg);
                                    bootbox.alert({ message: _msg, closeButton: false, callback: function () { window.location.href = window.location.href; } });
                                }
                                else {
                                    var _msg = "Fail to Approve";
                                    bootbox.alert(_msg);
                                }
                            }, error: function (e) {
                                var _msg = "Something went wrong.";
                                bootbox.alert(_msg);
                                $("#preloder, .loader").hide();
                            }
                        });
                    }
                }
            });
        }


        debugger;

    }

    function Reject1(statusforCW) {
        debugger;
        var comments1 = $("#comments").val();
        var Rolename1 = $("#SelectedSBID :selected").text();
        var RoleID1 = $("#SelectedSBID :selected").val();



        debugger;
        var RoleId = createdby;
        //var RoleName = Createdname;
        bootbox.confirm({
            title: "Confirm",
            message: "Are you sure you want to send back this Exam Notification No. " + NotifyNum.bold() + " to " + Rolename1.bold() + " for Correction/Clarification?",
            buttons: {
                confirm: {
                    label: 'Yes',
                    className: 'btn-success'
                },
                cancel: {
                    label: 'No',
                    className: 'btn-danger'
                }
            },

            callback: function (result) {
                if (result == true) {
                    debugger;

                    $.ajax({
                        type: "POST",
                        url: "/Notification/UpdateCommentTransStatus1",
                        dataType: 'json',
                        data: {
                            Id: ExamNotifyId,
                            Status: StatusID,
                            Loginid: RoleID1,
                            //comments: comments,
                            comments: comments1,

                        },

                        success: function (response) {

                            if (response == "Saved") {
                                var _msg = "Exam Notificaion No. " + NotifyNum.bold() + " Sent Back Successfully to " + Rolename1.bold() +" for Correction/Clarification.";
                                //alert(_msg);
                                bootbox.alert({ message: _msg, callback: function () { window.location.href = window.location.href; } });
                            }
                            else {
                                var _msg = "Fail to send";
                                bootbox.alert(_msg);
                            }
                        }, error: function (e) {
                            var _msg = "Something went wrong.";
                            bootbox.alert(_msg);
                            $("#preloder, .loader").hide();
                        }
                    })
                }
            }
        });

    }

    function GetCommentDetails(id, num) {
        $('#HistoryRemarksCommentsModal').modal('show');
        document.getElementById("notif").innerHTML = num;
        $.ajax({
            type: "Post",
            url: "/Notification/GetCommentDetails",
            data: { NotificationId: id },
            success: function (data) {

                $("#tbodyGrid").empty();
                var slNo = 1;
                $.each(data.NotificationList, function (id, col) {

                    var markup = "<tr><td>" + slNo + "</td><td>" + col.creationdatetime + "</td><td>" + col.By + "</td><td>" + col.Status +
                        "</td><td>" + col.comments + "</td></tr>";
                    $("#tbodyGrid").append(markup);
                    slNo++;
                });

            }
        });
    }

        function GetTextEditor() {
            debugger;

            $('#ViewNotificationModal').modal('show');
            $.ajax({
                type: "Get",
                url: "/Notification/ViewNotificationFile",
                data: { id: ExamNotifyId },
               
                success: function (data) {
                    var login_id = 0;
                    
                   
                    $("#viewNotificationFiles").empty();
                    var slNo = 1;
                    var i = 0;
                    var Arr = [];
                    $.each(data.NotificationList, function (id, li) {
                        var pdfUrlPath =  "'../../Content//Template//" + li.filename + ".pdf'";
                        var docUrlPath = "'../../Content//Template//" + li.Docfilename + ".docx'";
                        var FileName = li.Docfilename;
                        if (FileName == null) {
                            FileName = "This user not uploaded file, because he is not reviewed"
                        }
                        debugger;
                        var markup = "<tr><td>" + slNo + "</td><td style = 'display:none'>" + li.login_id + "</td><td>" + dateFormat(new Date(parseInt((li.creation_datetime).match(/\d+/)[0]))) + "</td><td>" + li.user_name + "</td><td>" + "<a href= " + docUrlPath + " data-toggle='tooltip' data-placement='top' title='Downlaod Word File' class='View' style='color: blue' target='_blank'><span>" + FileName + "</span></a><input class= 'btn btn-success' style='align:center; margin:10px; width:80%;' type='file' accept='.doc,.docx' id='UploadDocFile"+(i + 1)+"' onchange = 'PdfUpload(this)'>"  +
                            "</td><td>" + " <a href=" + pdfUrlPath + " target='_blank'><img src='/Content/img/pdf_logo.png' height='35px' width='35px' title='Download Notification(pdf)'/></a>" + "</td><td style = 'display:none'>" + li.Exam_Notif_Number + "</td></tr>";
                        $("#viewNotificationFiles").append(markup);

                        Arr[i] += i;
                        if (@Session["LoginId"] != li.login_id) {
                            var d = document.getElementById('UploadDocFile' + (i + 1));
                            $(d).attr('disabled', 'disabled');
                        }
                       
                        i++;
                        slNo++;
                    });

                    
                    @*if (li.login_id == @Session["LoginId"])
            {

                $('#fileUploaddisable').removeAttr('disabled');
            }*@

                    
                }
            });
    }

    function SaveUploadNotifDoc() {
        debugger;
        //var statusForUpload = $("#HiddenStatusId").text();
        var fileData = new FormData();
        var table = document.getElementById('tblViewNotification');
        var rowLength = table.rows.length;

        for (var i = 1; i < rowLength; i += 1) {
            
            var row = table.rows[i];

            var ID = row.cells[1];
            var LoginID = ID.innerText;

            if ((@Session["LoginId"] == LoginID)) {
                // get Officer column details
                var Name = row.cells[3];
                var officerName = Name.innerText;

                var notifNo = row.cells[6];
                var NotificationNo = notifNo.innerText;



                var upladFileCell = row.cells[4].childNodes[1];
                var SavePath = upladFileCell.files[0].name;

                //model.UploadPdf = upladFileCell.files[0];
                fileData.append(SavePath, upladFileCell.files[0]);
                //fileData.append(i, model);


                var obj = {
                    officerName: officerName, SavePath: SavePath, Exam_Notif_Number: NotificationNo, login_id:LoginID

                };
                var myJSON = JSON.stringify(obj);
                fileData.append(i, myJSON);


                bootbox.confirm({
                    title: "Confirm",
                    message: "Are you sure you want to upload the modifeid notification file?",
                    buttons: {
                        confirm: {
                            label: 'Yes',
                            className: 'btn-success'
                        },
                        cancel: {
                            label: 'No',
                            className: 'btn-danger'
                        }
                    },
                    closeButton: false,
                    callback: function (result) {
                        if (result == true) {


                            $.ajax({
                                type: 'POST',
                                url: '/Notification/SaveNotificationDocFile',
                                contentType: false, // Not to set any content header
                                processData: false, // Not to process data
                                async: false,
                                data: fileData,
                                success: function (result) {
                                    if (result > 0) {
                                        //bootbox.alert("Attendance Details for BlockNo  " + BlockNo + "  Saved Sucessfully.");
                                        //window.location.href = window.location.href; 
                                        var _msg = "Notification file updated and, saved sucessfully.";
                                        bootbox.alert(_msg);
                                       // bootbox.alert({ message: _msg, closeButton: false, callback: function () { window.location.href = "/Notification/CreateNotification?selectedTab=2"; } });
                                        clearEntry();
                                    }
                                    else {
                                        bootbox.alert("Error while Saving Attendance Detils Data");
                                    }
                                }
                            });
                        }
                    }
                });
            }

           
        }
    }

    
    </script>
