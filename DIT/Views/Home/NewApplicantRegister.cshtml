@model Models.Admission.NewApplicant

@{
    ViewBag.Title = "NewApplicantRegister";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@*<script src="~/scripts/jquery.validate.min.js" type="text/javascript"></script>
<script src="~/scripts/jquery.validate.unobtrusive.min.js" type="text/javascript"></script>*@



<body>
    @using (Html.BeginForm("NewApplicantRegister", "Home", FormMethod.Post))
    {
        <div class="row">
            <div class="container-fluid font" style="background-color:white;box-shadow: 0 2px 4px rgba(0,0,0,0.6);margin-top:20px; padding:20px;">
                <div class="tab-content">
                    <div class="accordion-option EligibleApplicationForm">
                        <h3 class="head1">Applicant Registration</h3>
                        <a href="javascript:void(0)" class="toggle-accordion active" accordion-id="#accordion"></a>
                    </div>
                    <div class="clearfix EligibleApplicationForm"></div>
                    <div id="collapseOne" class="panel-collapse collapse in" role="tabpanel" aria-labelledby="headingOne">
                        <div class="panel-body">
                            <div class="form-group">
                                <div class="row">

                                    <div aria-labelledby="headingOne">

                                        <div class="panel-body">
                                            <div class="form-group">

                                                <br>
                                                @Html.Hidden("OTPValidornot")
                                                <div class="row">
                                                    <div class="col-md-2">

                                                        @Html.LabelFor(model => model.Name)
                                                        <span><font class="text-danger">*</font></span>
                                                    </div>
                                                    <div class="col-md-4">
                                                        @Html.TextBoxFor(m => m.Name, new { @autocomplete = "off", @placeholder = "Applicant Name", @maxlength = "50", @class = "form-control", @title = "Enter The Applicant Name" })
                                                        @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })

                                                    </div>
                                                    <div class="col-md-2">
                                                        @Html.LabelFor(model => model.Email)
                                                        <span><font class="text-danger">*</font></span>
                                                    </div>
                                                    <div class="col-md-4">
                                                        @Html.TextBoxFor(m => m.Email, new { @autocomplete = "off", @placeholder = "Applicant Email", @maxlength = "50", @class = "form-control", @title = "Enter The Applicant Email", @type = "email" , @onchange = "IsApplicantEmailExist()" })
                                                        @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })

                                                    </div>
                                                </div>
                                                <div class="row">
                                                    <div class="col-md-2">
                                                        @Html.LabelFor(model => model.MobileNumber)
                                                        <span><font class="text-danger">*</font></span>
                                                    </div>
                                                    <div class="col-md-4">
                                                        @Html.TextBoxFor(m => m.MobileNumber, new { @autocomplete = "off", @placeholder = "Applicant MobileNumber", @maxlength = "10", @class = "form-control", @title = "Enter The Applicant MobileNumber" , @onchange = "IsApplicantMobileNumberExist()" })
                                                        @Html.ValidationMessageFor(x => x.MobileNumber, "", new { @class = "text-danger" })
                                                    </div>

                                                </div>
                                                <br />
                                                <br />

                                                <div class="row">
                                                    <div class="col-md-2">
                                                    </div>
                                                    <div class="col-md-4">
                                                        <input type="submit" name="submit" class="btn btn-primary" id="btnApplicantGenerateOTP" value="Generate OTP" />
                                                        @*<input type="submit" name="submit" value="Cancel" />
                                                            <input type="button" value="Generate OTP" class="btn btn-primary" id="btnValue" />*@
                                                    </div>

                                                </div>
                                                <br>
                                                @*@if (@Url.RequestContext.RouteData.Values["data"].ToString()== "Generate_otp") {*@
                                                <div id="OTPsection" style="display:none">
                                                    <div class="row">
                                                        <div class="col-md-2">
                                                            @Html.LabelFor(model => model.MobileOTP)
                                                            <span><font class="text-danger">*</font></span>
                                                        </div>
                                                        <div class="col-md-4">
                                                            @Html.TextBoxFor(m => m.MobileOTP, new { @autocomplete = "off", @placeholder = "Applicant Mobile OTP", @maxlength = "10", @class = "form-control", @title = "Enter The Applicant Mobile OTP" })
                                                            @Html.ValidationMessageFor(x => x.MobileOTP, "", new { @class = "text-danger" })
                                                            <small class="text-success" id="lblValidMobile" style="display:none">Mobile validated successfully</small>
                                                        </div>
                                                        <div class="col-md-2" style="display:none">
                                                            @Html.LabelFor(model => model.EmailOTP)
                                                            <span><font class="text-danger">*</font></span>
                                                        </div>
                                                        <div class="col-md-4" style="display:none">
                                                            @Html.TextBoxFor(m => m.EmailOTP, new { @autocomplete = "off", @placeholder = "Applicant Email OTP", @maxlength = "10", @class = "form-control", @title = "Enter The Applicant Email OTP" })
                                                            @Html.ValidationMessageFor(x => x.EmailOTP, "", new { @class = "text-danger" })
                                                            <small class="text-success" id="lblValidEmail" style="display:none">Email ID Validated successfully</small>
                                                            @*<input type="submit" name="submit" class="btn btn-primary" id="" value="Validate Email" />*@
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <div class="col-md-2">
                                                        </div>
                                                        <div class="col-md-2">
                                                            <input type="submit" name="submit" class="btn btn-primary" id="" value="Validate Mobile" />
                                                        </div>
                                                        <div class="col-md-1" id="divResendOTP">
                                                            <input type="submit" name="submit" class="btn btn-primary" id="" value="Resend OTP" @*style="color: #110933;font-weight: bold;"*@ />
                                                        </div>
                                                    </div>
                                                    @*@if (@Url.RequestContext.RouteData.Values["data"].ToString() == "Generate_otp")
                                                        {*@
                                                    <div class="col-md-2" id="divResendOTP" style="display:none">
                                                        @*<input type="submit" name="submit" class="" id="" value="Resend OTP" style="color: #110933;font-weight: bold;" />*@
                                                        @*<a href="#" target="_self" id="ResendOTP" class="" style="color: #110933;font-weight: bold;" value="Resend OTP">Resend OTP</a>*@
                                                    </div>
                                                    @*}*@

                                                </div>

                                                <br>
                                                <div id="passwordsection" style="display:none">
                                                    <div class="row">
                                                        <div class="col-md-2">
                                                            @Html.LabelFor(model => model.NewPassword)
                                                            <span><font class="text-danger">*</font></span>
                                                        </div>
                                                        <div class="col-md-4">
                                                            @Html.PasswordFor(m => m.NewPassword, new { @autocomplete = "off", @placeholder = "Password", @maxlength = "20", @minlength = "8", pattern = Model.pwdPattern, @class = "form-control", @title = Model.pwdMessage, @type = "password" })

                                                            @Html.ValidationMessageFor(x => x.NewPassword, "", new { @class = "text-danger" })
                                                        </div>
                                                        <div class="col-md-6">
                                                            <span class="text-danger ">
                                                                Password Rules:
                                                                <ul class="text-danger">
                                                                    <li> Please enter at least one capital letter    </li>
                                                                    <li> Please enter at least one small letter    </li>
                                                                    <li>
                                                                        Please enter at least one special character
                                                                        (!, @@, # or $ are allowed)
                                                                    </li>
                                                                    <li>Please enter at least one number / digit  </li>
                                                                    <li>
                                                                        Password should have a minimum length
                                                                        of 8 characters and a maximum length of
                                                                        15 characters
                                                                    </li>
                                                                </ul>
                                                            </span>
                                                        </div>
                                                    </div>

                                                    <div class="row">
                                                        <div class="col-md-2">

                                                            @Html.LabelFor(model => model.ConfirmNewPassword)
                                                            <span><font class="text-danger">*</font></span>
                                                        </div>
                                                        <div class="col-md-4">
                                                            @Html.PasswordFor(m => m.ConfirmNewPassword, new { @autocomplete = "off", @placeholder = "Confirm Password", @maxlength = "20", @minlength = "8", pattern = Model.pwdPattern, @class = "form-control", @title = Model.pwdMessage, @type = "password" })
                                                            @Html.ValidationMessageFor(x => x.ConfirmNewPassword, "", new { @class = "text-danger" })
                                                        </div>

                                                    </div>
                                                    <div id="SaveApplicantRegistrationDetails" class="row">
                                                        <div class="col-md-2">
                                                        </div>
                                                        <div class="col-md-4">
                                                            <input type="submit" name="submit" class="btn btn-primary" id="" value="Register Applicant" />
                                                            @*<input type="button" value="Register Applicant Details" class="btn btn-primary" id="SaveNewApplicantDetails" />*@
                                                        </div>
                                                    </div>
                                                </div>
                                                <br>

                                                <br>
                                                <div class="row">
                                                    <large id="" class="text-danger">
                                                        &nbsp;&nbsp;&nbsp;Note : Whichever Fields having Asterisk (*) that indicates it as "mandatory".
                                                    </large>
                                                </div>

                                                <br>

                                                <br>
                                                <div class="row">
                                                    <div style="text-align:left">
                                                        @Html.ActionLink("Back to home", "Index", "Home", null, new { @class = "btn btn-primary", @style = "" })

                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>

                        </div>
                    </div>

                </div>
            </div>

        </div>
        <input type="hidden" id="hiddenotp" />
    }


    <script type="text/javascript">
		function ShowMessage1(message) {

				bootbox.alert(message);
		}
	function ShowMessage(message, str, issucess) {

			switch (str) {
				case "Generate_otp":
					if (issucess == "True") {
						$("#OTPsection").show();
					}
					bootbox.alert(message);
					break;
				case "Validate_otp":
					if (issucess == "True") {
                        $("#lblValidMobile").show();
                        $("#lblValidEmail").show();
						$("#passwordsection").show();
						$("#divResendOTP").show();
						$("#OTPsection").show();
					} else {
                        $("#lblValidMobile").hide();
                        $("#lblValidEmail").hide();
						$('#ApplicantOTP').val("");
						$("#divResendOTP").show();
						$("#passwordsection").hide();
						$("#OTPsection").show();
					}
					bootbox.alert(message);
					break;

					
					case "Resend_OTP":
					if (issucess == "True") {
						$('#MobileOTP').val("");
                        //$('#EmailOTP').val("");
						$('#ApplicantOTP').val("");
						$("#passwordsection").hide();
						$("#divResendOTP").show();
						$("#OTPsection").show();
					} else {
						$('#ApplicantOTP').val("");
						$("#divResendOTP").show();
						$("#passwordsection").hide();
						$("#OTPsection").show();
					}
					bootbox.alert(message);
					break;
				case "Register_Applicant":
					if (issucess == "True") {
                        bootbox.alert(message, function () {
                            window.location.href = "/Home/Index";
                        });
						@*window.location.replace('@Url.Action("Index", "Home")');*@
					}
                    else {
                        $("#lblValidMobile").show();

						$("#divResendOTP").show();
						$("#passwordsection").show();
						$("#OTPsection").show();
						bootbox.alert(message);
					}
					break;

			}

		};

		$(document).ready(function () {

            //$("#Email").val('');

			$('#ApplicantMobileNumber').keypress(function (event) {
				var keycode = event.which;
				if (!(event.shiftKey == false && (keycode == 46 || keycode == 8 || keycode == 37 || keycode == 39 || (keycode >= 48 && keycode <= 57)))) {
					event.preventDefault();
				}
			});

			$(window).bind("load", function () {
				$('#mobilenoError').text("");
				$('#emailError').text("");
				$('#nameError').text("");

				var inp = $('.input-validation-error:first').get(0);
				if (inp) {
					inp.focus();
					$('.input-validation-error:first').css('background-color', '#FAF6A5'); // change the background color
				}
			});

        });

        function IsApplicantMobileNumberExist() {
            var MobNo = $("#MobileNumber").val();
           // var EmailID = $("#Email").val();

            $.ajax({
                type: "POST",
                url: "/Home/IsMobileNumberExist",
                data: '{MobileNumber: "' + MobNo + '" }',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    if (response == true) {
                        bootbox.alert("Mobile Number already exists in database.")
                        $("#btnApplicantGenerateOTP").attr('disabled', 'disabled');
                        //if (EmailID != "") {
                        //    IsApplicantEmailExist();
                        //}
                    }
                    else {
                        $("#btnApplicantGenerateOTP").removeAttr('disabled', 'disabled');

                    }
                }
            });
        };

        function IsApplicantEmailExist() {
            var EmailID = $("#Email").val();
          //  var MobNo = $("#MobileNumber").val();

            $.ajax({
                type: "POST",
                url: "/Home/IsEmailExist",
                data: '{Email: "' + EmailID + '" }',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    if (response == true) {
                        bootbox.alert("Email Id already exists in database.")
                        $("#btnApplicantGenerateOTP").attr('disabled', 'disabled');
                        //if (MobNo != "") {
                        //    IsApplicantMobileNumberExist();
                        //}
                    }
                    else {
                        $("#btnApplicantGenerateOTP").removeAttr('disabled', 'disabled');

                    }
                }
            });
        };


    </script>

    @if (ViewBag.JavaScriptFunction != null)
    {
        <script type="text/javascript">
            @Html.Raw(ViewBag.JavaScriptFunction)
        </script>
    }
    @if (ViewBag.JavaScriptFunction1 != null)
    {
        <script type="text/javascript">
            @Html.Raw(ViewBag.JavaScriptFunction1)
        </script>
    }
</body>
